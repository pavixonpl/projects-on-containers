syntax = "proto3";
import "google/protobuf/timestamp.proto";
option csharp_namespace = "Issues.API.Protos";

service IssueService{
	rpc GetIssueWithContent(GetIssueWithContentRequest) returns (GetIssueWithContentResponse);
	rpc GetIssuesForGroup(GetIssuesForGroupRequest) returns (GetIssuesForGroupResponse);
	rpc GetIssuesForUser(GetIssuesForUserRequest) returns (GetIssuesForUserResponse);
	rpc CreateIssue(CreateIssueRequest) returns (CreateIssueResponse);
	rpc RenameIssue(RenameIssueRequest) returns (RenameIssueResponse);
	rpc UpdateIssueContent(UpdateIssueContentRequest) returns (UpdateIssueContentResponse);
	rpc DeleteIssue(DeleteIssueRequest) returns (DeleteIssueResponse); //TODO
}

message DeleteIssueRequest{
	string id = 1;
}

message DeleteIssueResponse{

}

message GetIssueWithContentRequest{
	string issueId = 1;
}

message GetIssueWithContentResponse{
	IssueReference issue = 1;
	IssueContent content = 2;
}

message GetIssuesForGroupRequest{
	string groupId = 1;
}

message GetIssuesForGroupResponse{
	repeated IssueReference issues = 1;
}

message GetIssuesForUserRequest{
	string userId = 1;
}

message GetIssuesForUserResponse{
	repeated IssueReference issues = 1;
}

message CreateIssueRequest{
	string name = 1;
	string groupId = 2;
	string textContent = 3;
	string typeOfIssueId = 4;
}

message CreateIssueResponse{
	string id = 1;
}


message RenameIssueRequest{
	string id = 1;
	string newName = 2;
}

message RenameIssueResponse{}

message UpdateIssueContentRequest{
	string issueId = 1;
	string textContent = 2;
}

message UpdateIssueContentResponse{}


//Models
message IssueReference{
	string id = 1;
	string name = 2;
	string statusId = 3;
	string creatingUserId = 4;
	google.protobuf.Timestamp timeOfCreation = 5;
	string typeOfIssueId = 6;
	bool IsArchived = 7;
	string groupId = 8;
	//TODO there is no groupId
}

message IssueContent{
	string textContent = 1;
}